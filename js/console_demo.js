console.clear(); // limpa o console
console.log("=== Demonstra√ß√£o dos m√©todos do console ===\n");

// üìú Sa√≠da b√°sica
console.log("1Ô∏è‚É£ console.log ‚Üí Mensagem gen√©rica");
console.info("2Ô∏è‚É£ console.info ‚Üí Mensagem de informa√ß√£o");
console.warn("3Ô∏è‚É£ console.warn ‚Üí Aviso (amarelo)");
console.error("4Ô∏è‚É£ console.error ‚Üí Erro (vermelho)");
console.debug("5Ô∏è‚É£ console.debug ‚Üí Mensagem de debug\n");

// üìä Formatar dados
const frutas = [
    { nome: "Ma√ß√£", cor: "Vermelha", preco: 3.50 },
    { nome: "Banana", cor: "Amarela", preco: 2.20 },
    { nome: "Uva", cor: "Roxa", preco: 5.00 }
];
console.log("6Ô∏è‚É£ console.table ‚Üí Tabela formatada:");
console.table(frutas);

console.log("7Ô∏è‚É£ console.dir ‚Üí Visualiza√ß√£o detalhada de um objeto:");
console.dir(frutas[0], { depth: null });

console.log("8Ô∏è‚É£ console.dirxml ‚Üí Exibir em formato XML/DOM (mais √∫til no navegador)\n");

// ‚è± Medi√ß√£o de tempo
console.log("‚è± Testando console.time / console.timeLog / console.timeEnd");
console.time("Loop grande");
let total = 0;
for (let i = 0; i < 1_000_000; i++) { total += i; }
console.timeLog("Loop grande", "‚Üí at√© aqui");
console.timeEnd("Loop grande");
console.log("Resultado final:", total, "\n");

// üîÑ Contadores
console.log("üìä Testando console.count / console.countReset");
console.count("contador");
console.count("contador");
console.count("contador");
console.countReset("contador");
console.count("contador");
console.log("");

// üìå Verifica√ß√µes
console.log("üõë Testando console.assert");
console.assert(2 + 2 === 4, "N√£o ser√° exibido porque a condi√ß√£o √© verdadeira");
console.assert(2 + 2 === 5, "Erro: 2 + 2 n√£o √© 5!");
console.log("");

// üß≠ Agrupar mensagens
console.log("üìÇ Testando console.group / console.groupCollapsed / console.groupEnd");
console.group("Grupo 1");
console.log("Mensagem 1");
console.log("Mensagem 2");
console.groupEnd();

console.groupCollapsed("Grupo recolhido");
console.log("Mensagem escondida at√© abrir");
console.groupEnd();
console.log("");

// üîç Rastreamento
console.log("üîç Testando console.trace");
function a() { b(); }
function b() { c(); }
function c() { console.trace("Rastro da execu√ß√£o"); }
a();
console.log("");

// üìä Perfil de execu√ß√£o (s√≥ no DevTools do navegador)
console.log("üéØ console.profile / console.profileEnd ‚Üí Funciona melhor no navegador DevTools\n");

console.log("=== Fim da demonstra√ß√£o ===");
